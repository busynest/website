{"version":3,"file":"drawer.js","sourceRoot":"","sources":["../src/drawer.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,IAAI,EAAE,GAAG,EAA6B,UAAU,EAAE,MAAM,KAAK,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAS,mBAAmB,CAAC;AAC/D,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,KAAK,EAAa,MAAM,SAAS,CAAC;AAC3C,OAAO,EAAE,WAAW,EAAE,MAAM,4BAA4B,CAAC;AAQzD,IAAa,UAAU,GAAvB,MAAa,UAAW,SAAQ,OAAO,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC;IAKxD;QACE,KAAK,EAAE,CAAC;QAHuC,OAAE,GAAY,KAAK,CAAC;IAIrE,CAAC;IAED,YAAY,CAAC,KAAgB;QAE3B,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,MAAO,CAAC,MAAM,CAAC;IACjC,CAAC;IAES,YAAY;QACpB,IAAI,CAAC,UAAW,CAAC,aAAa,CAAC,QAAQ,CAAE,CAAU,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAE,WAAW,CAAC,KAAK,CAAC,CAAE,CAAA,CAAC,CAAC,CAAE,CAAC;IAEhI,CAAC;IAED,MAAM,KAAK,MAAM;QAAe,OAAO,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAyDrC,CAAA;IAAC,CAAC;IAAC,CAAC;IAEC,MAAM;QACd,OAAO,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;OAuGR,CAAC;IACJ,CAAC;CACF,CAAA;AArLyC;IAAzC,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAC,CAAC;sCAA4B;AAH1D,UAAU;IADtB,aAAa,CAAC,aAAa,CAAC;GAChB,UAAU,CAwLpB;SAxLU,UAAU","sourcesContent":["\r\nimport { html, css, TemplateResult, CSSResult, LitElement } from 'lit';\r\nimport { customElement, property }    from 'lit/decorators.js';\r\nimport { connect } from 'pwa-helpers/connect-mixin';\r\nimport { store, RootState } from './store';\r\nimport { closeDrawer } from './controllers/redux-drawer';\r\n\r\n// import './login';\r\n// import { googleSignIn } from './controllers/google';\r\n// import { logOut } from './controllers/firebase';\r\n// import { LazyLoader } from '../lazy-loader';\r\n\r\n@customElement('user-drawer')\r\nexport class UserDrawer extends connect(store)(LitElement) {\r\n\r\n  // @property({type: Boolean}) public user:any = false;\r\n  @property({type: Boolean, reflect: true}) public on :boolean = false;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  stateChanged(state: RootState) {\r\n    // this.user = state.account!.user;\r\n    this.on = state.drawer!.drawer;\r\n  }\r\n\r\n  protected firstUpdated() {\r\n    this.shadowRoot!.querySelector('#close')!         .addEventListener('click', () => { store.dispatch( closeDrawer(false) ) } );\r\n    // this.shadowRoot!.querySelector('.leave')!         .addEventListener('click', () => { logOut(), store.dispatch( closeDrawer() ); } );\r\n  }\r\n\r\n  static get styles():CSSResult { return css`\r\n\r\n        :host {\r\n          visibility:           hidden;\r\n          display:              inline-grid;\r\n          position:             fixed;\r\n          top:                  0;\r\n          right:                0;\r\n          z-index:              2;\r\n          width:                100%;\r\n          max-width:            500px;\r\n          margin:               auto;\r\n          background-color:     rgba(228, 241, 254, 1);\r\n          color:                #303030;\r\n          padding:              24px 12px;\r\n          border:               1.5px #303030 solid;\r\n\r\n          box-sizing:           border-box;\r\n          -webkit-box-sizing:   border-box;\r\n\r\n          border-radius:          20px;\r\n          -webkit-border-radius:  20px;\r\n          will-change:          transform;\r\n\r\n          transform:            translate3d(0, -150%, 0);\r\n          -webkit-transform:    translate3d(0, -150%, 0);\r\n\r\n          transition-property:          visibility, transform;\r\n          -webkit-transition-property:  visibility, transform;\r\n\r\n          transition-duration:          .6s;\r\n          -webkit-transition-duration:  .6s;\r\n\r\n        }\r\n\r\n        :host[on] {\r\n          visibility: visible;\r\n          transform:            translate3d(0, 0, 0);\r\n          -webkit-transform:    translate3d(0, 0, 0);\r\n        }\r\n\r\n        /** DISPLAY */\r\n        .slognTitle { color: var(--primary-orange); }\r\n\r\n        .slognTitle,\r\n        .setLog,\r\n        #googleOne { display: none; }\r\n\r\n        .slognTitle[data-active],\r\n        #googleOne[data-active] { display: block; }\r\n\r\n        .setLog[data-on] { display: grid; }\r\n        .google:hover { cursor: pointer; }\r\n\r\n        /*.divide       { border: 2px solid #606060; margin: 6px 0 0 0; border-radius: 50%; }*/\r\n        @media (max-width: 460px) { .google { font-size: .8em; } }\r\n\r\n      ` } ;\r\n\r\n  protected render():TemplateResult {\r\n    return html`\r\n\r\n<!-- Toggle EXIT -->\r\n<button\r\n  id    =\"close\"\r\n  style =\"\r\n    position:         absolute;\r\n    top:              16px;\r\n    right:            16px;\r\n    height:           36px;\r\n    width:            36px;\r\n    margin:           auto;\r\n    background-color: transparent;\r\n    border:           0px;\r\n    fill:             red;\r\n    opacity:          .8;\r\n    -webkit-opacity:  .8;\"><svg viewBox=\"0 0 24 24\"><path d=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"></path></svg>\r\n    </button>\r\n\r\n    <!-- <h2 class=\"slognTitle\" ?data-active =\"\\${!this.user}\" style=\"text-align: center;\">Welcome Back</h2> -->\r\n\r\n    <!-- Logged OUT  -->\r\n\r\n   <!-- GOOGLE SIGN IN  @click  =\"\\${ googleSignIn }\" ?data-active =\"\\${ !this.user }\" -->\r\n   <button\r\n      id      =\"googleOne\"\r\n      class   =\"google\"\r\n     \r\n      \r\n      style   =\"\r\n      margin:                   auto auto 8px;;\r\n      color:                    #444;\r\n      width:                    210px;\r\n      border:                   thin solid #888;\r\n      box-shadow:               1px 1px 1px grey;\r\n      white-space:              nowrap;\r\n      background-color:         #ffffff;\r\n      size:                     14px;\r\n      font:                     Roboto-Medium;\r\n      line-height:              26px;\r\n      padding:                  8dp;\r\n      border-color:             #4267b2;\r\n      font-weight:              bold;\r\n      text-align:               center;\r\n      text-shadow:              none;\r\n      border-radius:            10px;\r\n      -webkit-border-radius:    10px;\r\n      -webkit-font-smoothing:   antialiased;\r\n      justify-content:          center;\r\n      -webkit-justify-content:  center;\">\r\n        <span\r\n          class=\"icon\"\r\n          style=\"\r\n            background:       url('/images/google.png') transparent 5px 50% no-repeat;\r\n            display:          inline-block;\r\n            vertical-align:   middle;\r\n            width:            42px;\r\n            height:           42px;\"></span>\r\n        <span class=\"buttonText\">sign-in with Google</span>\r\n    </button>\r\n\r\n    <!-- <create-user method ?user=\"\\${ !this.user }\" ></create-user> -->\r\n\r\n<!-- Logged IN ?data-on=\"\\${ this.user === true }\" -->\r\n<div class=\"setLog\"  style=\"grid-gap: 16px;\">\r\n\r\n  <p\r\n    style=\"\r\n      cursor:           pointer;\r\n      margin:           12px;\r\n      box-sizing:       border-box;\r\n      text-transform:   uppercase; \r\n      text-align:       center;\r\n      font-weight:      800;\r\n      margin:           0;\"><a href=\"/feedback\" style=\"text-decoration: none; color: #303030;\">Feedback</a>\r\n  </p>\r\n\r\n  <p\r\n    style=\"\r\n      cursor:           pointer;\r\n      margin:           12px;\r\n      box-sizing:       border-box;\r\n      text-transform:   uppercase; \r\n      text-align:       center;\r\n      font-weight:      800;\r\n      margin:           0;\"><a href=\"/terms\" style=\"text-decoration: none; color: #303030;\">Terms of Use</a>\r\n  </p>\r\n\r\n  <p\r\n    class=\"leave\"\r\n    style=\"\r\n      cursor: pointer;\r\n      margin: 12px;\r\n      box-sizing: border-box;\r\n      text-transform:   uppercase; \r\n      text-align:       center;\r\n      font-weight:      800;\r\n      margin:           0;\"><a href=\"/\" style=\"text-decoration: none; color: #303030;\">Log Out</a>\r\n  </p>\r\n</div>\r\n\r\n<a href=\"https://www.contractorscentre.com\"></a>\r\n\r\n      `;\r\n    }\r\n  }\r\n\r\n  declare global {\r\n    interface HTMLElementTagNameMap {\r\n        'user-drawer': UserDrawer;\r\n    }\r\n  }"]}