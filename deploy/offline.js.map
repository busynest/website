{"version":3,"file":"offline.js","sourceRoot":"","sources":["../src/offline.ts"],"names":[],"mappings":";;;;;;AACA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAA6B,MAAM,KAAK,CAAC;AACvE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAS,mBAAmB,CAAC;AAG/D,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QAEoC,WAAM,GAAG,KAAK,CAAC;IAgDnD,CAAC;IA9CC,MAAM,KAAK,MAAM;QAAe,OAAO,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAsCvC,CAAA;IACH,CAAC;IAES,MAAM;QACd,OAAO,IAAI,CAAA;;KAEV,CAAC;IACJ,CAAC;CACF,CAAA;AAhD4B;IAA1B,QAAQ,CAAC,EAAC,IAAI,EAAE,OAAO,EAAC,CAAC;wCAAuB;AAFtC,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CAkDpB;SAlDY,QAAQ","sourcesContent":["\r\nimport { LitElement, html, css, TemplateResult, CSSResult } from 'lit';\r\nimport { customElement, property }    from 'lit/decorators.js';\r\n\r\n@customElement('snack-bar')\r\nexport class SnackBar extends LitElement {\r\n  \r\n  @property({type: Boolean}) public active = false;\r\n\r\n  static get styles():CSSResult { return css`\r\n      :host {\r\n        display:              block;\r\n        position:             fixed;\r\n        bottom:               0;\r\n        left:                 0;\r\n        right:                0;\r\n        padding:              12px;\r\n        background-color:     var(--app-white-color);\r\n        color:                var(--app-black-color);\r\n        box-shadow:           0 0 10px rgba(0, 0, 0, 0.2);\r\n        text-align:           center;\r\n        will-change:          transform;\r\n\r\n        transform:            translate3d(0, 100%, 0);\r\n        -webkit-transform:    translate3d(0, 100%, 0);\r\n\r\n        transition-property:          visibility, transform;\r\n        -webkit-transition-property:  visibility, transform;\r\n\r\n        transition-duration:          0.2s;\r\n        -webkit-transition-duration:  0.2s;\r\n\r\n        visibility:           hidden;\r\n      }\r\n      :host[active] {\r\n        visibility:           visible;\r\n        \r\n        transform:            translate3d(0, 0, 0);\r\n        -webkit-transform:    translate3d(0, 0, 0);\r\n\r\n      }\r\n      @media (min-width: 460px) {\r\n        snack-bar {\r\n          width:              320px;\r\n          margin:             auto;\r\n        }\r\n      }\r\n    `\r\n  }\r\n\r\n  protected render():TemplateResult {\r\n    return html`\r\n    <slot></slot>\r\n    `;\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n      'snack-bar': SnackBar;\r\n  }\r\n}"]}