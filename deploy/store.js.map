{"version":3,"file":"store.js","sourceRoot":"","sources":["../src/store.ts"],"names":[],"mappings":"AAQA,OAAO,EACL,WAAW,EACX,OAAO,EACP,eAAe,EACf,eAAe,EAGhB,MAAM,OAAO,CAAC;AAEf,OAAO,KAA0B,MAAQ,aAAa,CAAC;AACvD,OAAO,EAAE,mBAAmB,EAAE,MAAW,mCAAmC,CAAC;AAE7E,OAAO,EAAE,GAAG,EAAuB,MAAoB,6BAA6B,CAAC;AACrF,OAAO,EAAE,OAAO,EAA+B,MAAQ,6BAA6B,CAAC;AACrF,OAAO,EAAE,MAAM,EAA6B,MAAW,4BAA4B,CAAC;AAcpF,MAAM,UAAU,GAGf,MAAM,CAAC,oCAAoC,IAAI,OAAO,CAAC;AAGvD,MAAM,CAAC,MAAM,KAAK,GAAG,WAAW,CAC/B,KAAK,CAAC,EAAE,CAAC,KAAwC,EACjD,UAAU,CACN,mBAAmB,CAAC,eAAe,CAAC,EACpC,eAAe,CAAE,KAAgD,CAAE,CACtE,CACF,CAAC;AAEF,KAAK,CAAC,WAAW,CAAC;IAChB,GAAG;IACH,MAAM;IACN,OAAO;CACN,CAAC,CAAC","sourcesContent":["\r\ndeclare global {\r\n  interface Window {\r\n    process?: Object;\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nimport {\r\n  createStore,\r\n  compose,\r\n  applyMiddleware,\r\n  combineReducers,\r\n  Reducer,\r\n  StoreEnhancer\r\n} from 'redux';\r\n\r\nimport thunk, { ThunkMiddleware }   from 'redux-thunk';\r\nimport { lazyReducerEnhancer }      from 'pwa-helpers/lazy-reducer-enhancer';\r\n\r\nimport { app, appAction, AppState }               from './controllers/redux-general';\r\nimport { offline, offlineState, offlineAction }   from './controllers/redux-offline';\r\nimport { drawer, drawerState, drawerAction }      from './controllers/redux-drawer';\r\n// import { project, projectState, projectAction }   from './factory/state-project';\r\n\r\nexport interface RootState {\r\n  app?:       AppState;\r\n  offline?:   offlineState;\r\n  drawer?:    drawerState;\r\n  // project?:   projectState;\r\n}\r\n\r\n// Merge Typescript Factory\r\nexport type RootAction = appAction | offlineAction | drawerAction ;\r\n\r\n// Sets up a Chrome extension for time travel debugging. See https://github.com/zalmoxisus/redux-devtools-extension for more information.\r\nconst devCompose: <Ext0, Ext1, StateExt0, StateExt1>(\r\n  f1: StoreEnhancer<Ext0, StateExt0>, f2: StoreEnhancer<Ext1, StateExt1>\r\n) => StoreEnhancer<Ext0 & Ext1, StateExt0 & StateExt1> =\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n // RESUX STORE -- WITH MIDDLEWARE\r\n export const store = createStore(\r\n  state => state as Reducer <RootState, RootAction>,\r\n  devCompose(\r\n      lazyReducerEnhancer(combineReducers),\r\n      applyMiddleware( thunk as ThunkMiddleware <RootState, RootAction> )\r\n  )\r\n);\r\n\r\nstore.addReducers({\r\n  app,\r\n  drawer,\r\n  offline\r\n  });\r\n"]}